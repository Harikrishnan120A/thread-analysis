version: "3.9"

services:
  # Nginx - Unified Entry Point (Single Port 8080)
  nginx:
    build:
      context: ./nginx
    profiles: ["dev", "prod"]
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ../dataset_viewer.html:/usr/share/nginx/html/dataset_viewer.html:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: ./backend
    profiles: ["dev"]
    env_file:
      - ./docker.env
    environment:
      # DB + cache (override via docker.env if needed)
      MONGODB_URI: mongodb://mongo:27017
      MONGODB_DB: cyberguard
      QDRANT_HOST: qdrant
      QDRANT_PORT: "6333"
      REDIS_URL: redis://redis:6379/0
      # Optional Gemini
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
    expose:
      - "8000"
    depends_on:
      - mongo
      - redis
      - qdrant
    volumes:
      - ./backend:/app
    command: ["uvicorn","main:app","--host","0.0.0.0","--port","8000","--reload"]

  frontend:
    build:
      context: ./frontend
      target: dev
    profiles: ["dev"]
    command: ["sh","-lc","[ -d node_modules ] || npm ci --no-audit --no-fund; npm run dev"]
    environment:
      # Frontend now uses relative paths through Nginx (port 8080)
      NEXT_PUBLIC_BACKEND_HTTP_URL: http://localhost:8080
      NEXT_PUBLIC_BACKEND_WS_URL: ws://localhost:8080/ws
      HOST: 0.0.0.0
      PORT: 3000
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  backend-prod:
    build:
      context: ./backend
    env_file:
      - ./docker.env
    environment:
      MONGODB_URI: mongodb://mongo:27017
      MONGODB_DB: cyberguard
      QDRANT_HOST: qdrant
      QDRANT_PORT: "6333"
      REDIS_URL: redis://redis:6379/0
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
    expose:
      - "8000"
    depends_on:
      - mongo
      - redis
      - qdrant
    profiles: ["prod"]

  frontend-prod:
    build:
      context: ./frontend
      target: runner
    environment:
      # Production also uses single port through Nginx (port 8080)
      NEXT_PUBLIC_BACKEND_HTTP_URL: http://localhost:8080
      NEXT_PUBLIC_BACKEND_WS_URL: ws://localhost:8080/ws
      HOST: 0.0.0.0
      PORT: 3000
    expose:
      - "3000"
    depends_on:
      - backend-prod
    profiles: ["prod"]

  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  mongo_data:
  qdrant_data:

